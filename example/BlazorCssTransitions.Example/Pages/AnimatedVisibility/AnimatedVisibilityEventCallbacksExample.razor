@using BlazorCssTransitions

@* Example: Event callbacks for AnimatedVisibility *@
<div style="margin-bottom: 2rem;">
    <h4>Event Callbacks</h4>
    <div style="margin-bottom: 0.5rem; color: #555; font-size: 0.98em;">
        Demonstrates usage of <code>OnShown</code>, <code>OnHidden</code>, and <code>OnStateChanged</code>.
    </div>
    <button @onclick="Toggle">@(isVisible ? "Hide" : "Show")</button>
    <AnimatedVisibility Visible="isVisible" OnShown="OnShown" OnHidden="OnHidden" OnStateChanged="OnStateChanged">
        <ChildContent>
            <div style="padding: 1rem; background: #e0e0ff; border-radius: 4px;">This content triggers events on state changes.</div>
        </ChildContent>
    </AnimatedVisibility>
    <div style="margin-top: 0.5rem; color: #333;">
        <b>Last event:</b> @lastEvent
    </div>
</div>

@code {
    private bool isVisible = true;
    private string lastEvent = "None";
    private void Toggle() => isVisible = !isVisible;

    private Task OnShown() { lastEvent = "Shown"; return Task.CompletedTask; }
    private Task OnHidden() { lastEvent = "Hidden"; return Task.CompletedTask; }
    private Task OnStateChanged(AnimatedVisibility.State s) { lastEvent = $"State: {s}"; return Task.CompletedTask; }
}
