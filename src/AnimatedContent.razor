
@typeparam TState

<div class=@ContainerClasses
     style=@ContainerStyles>

    @if (ChildContent is not null
        || Switch is not null)
    {
        @RenderStates()
    }

</div>

@code {

    private const string _keepContentInBoundsStyle = "min-height: 0;";

    private RenderFragment RenderStates()
    {
        var paramsOfStatesToRender = GetAnimatedVisibilityParametersForRender();

        if (!NewStateOnTop)
            return
                @<text>
                    @for (int stateIndex = 0; stateIndex < paramsOfStatesToRender.Length; stateIndex++)
                    {
                        var parameters = paramsOfStatesToRender[stateIndex];

                        <AnimatedVisibility Visible=@(parameters.Visible)
                                            Enter=@(parameters.Enter)
                                            Exit=@(parameters.Exit)
                                            StartWithTransition=@(parameters.StartWithTransition)
                                            OnHidden=@(parameters.OnHidden)
                                            OnShown=@(parameters.OnShown)
                                            Class="animated-content-item"
                                            Style=@(KeepContentInBounds ? _keepContentInBoundsStyle : null)
                                            @key=@(parameters.Key)>
                            @(parameters.Fragment)
                        </AnimatedVisibility>
                    }
                </text>;

        return
            @<text>
                @for (int stateIndex = paramsOfStatesToRender.Length - 1; stateIndex >= 0; stateIndex--)
                {
                    var parameters = paramsOfStatesToRender[stateIndex];

                    <AnimatedVisibility Visible=@(parameters.Visible)
                                        Enter=@(parameters.Enter)
                                        Exit=@(parameters.Exit)
                                        StartWithTransition=@(parameters.StartWithTransition)
                                        OnHidden=@(parameters.OnHidden)
                                        OnShown=@(parameters.OnShown)
                                        Class="animated-content-item"
                                        Style=@(KeepContentInBounds ? _keepContentInBoundsStyle : null)
                                        @key=@(parameters.Key)>
                        @(parameters.Fragment)
                    </AnimatedVisibility>
                }
            </text>;
    }
}
